1.为什么是nats
  nats本身性能高, 延迟低, 原生支持集群, go语言编写

2.为什么用jetstream
  不用jetstream服务器重启有多种消息丢失的情况

3.什么时候使用jetstram什么时候不使用
  丢消息不影响玩家数据最终一致性可以不开, 比如推送给客户端的数据在发网关时遇到网关重启, 即使丢失等恢复玩家重连后会重新登陆重新同步

4.为什么没有使用socket, grpc等点对点传输代替nats
  无法保证在原有基础上带来足够有价值的提高

5.概括一下服务器的特点
  csp模式, 通过message.Cast传递消息, 所有消息请求异步不阻塞, 支持rpc异步回调, 可以做到无锁编程
  模块化, 每个模块根据server-id, module-name组成唯一标识, 每个模块默认一个goroutine, 通过channel通信
  不同服务器可以根据功能自由组合模块复用代码提升开发效率

6.进程可能有哪些goroutine
  执行main函数的goroutine
  每个模块默认开一个goroutine
  每次rpc调用发起方和被调用方会各开一个临时阻塞的
  模块内根据场景开辟, 如和客户端建立连接收发消息

7.一个module一个goroutine性能不够怎么办
  优化程序性能
  module根据功能拆分成多个, 或者模块内维护自己的多个goroutine
  更换更高主频cpu的机器
...